{"version":3,"file":"components-task-stories.33e6f4f7fcef6aca82b0.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://@org/source/./todo/src/app/components/task.component.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Task } from '../models/task.model';\nlet TaskComponent = class TaskComponent {\n    constructor() {\n        this.PinTask = new EventEmitter();\n        this.ArchiveTask = new EventEmitter();\n    }\n    /**\n     * @ignore\n     * Component method to trigger the onPin event\n     * @param id string\n     */\n    onPin(id) {\n        this.PinTask.emit(id);\n    }\n    /**\n     * @ignore\n     * Component method to trigger the onArchive event\n     * @param id string\n     */\n    onArchive(id) {\n        this.ArchiveTask.emit(id);\n    }\n    static { this.propDecorators = {\n        task: [{ type: Input }],\n        PinTask: [{ type: Output }],\n        ArchiveTask: [{ type: Output }]\n    }; }\n};\nTaskComponent = __decorate([\n    Component({\n        selector: 'app-task',\n        template: `\n    <div class=\"list-item {{ task?.state }}\">\n      <label\n        [attr.aria-label]=\"'archiveTask-' + task?.id\"\n        for=\"checked-{{ task?.id }}\"\n        class=\"checkbox\"\n      >\n        <input\n          type=\"checkbox\"\n          disabled=\"true\"\n          [defaultChecked]=\"task?.state === 'TASK_ARCHIVED'\"\n          name=\"checked-{{ task?.id }}\"\n          id=\"checked-{{ task?.id }}\"\n        />\n        <span class=\"checkbox-custom\" (click)=\"onArchive(task?.id)\"></span>\n      </label>\n      <label\n        [attr.aria-label]=\"task?.title + ''\"\n        for=\"title-{{ task?.id }}\"\n        class=\"title\"\n      >\n        <input\n          type=\"text\"\n          [value]=\"task?.title\"\n          readonly=\"true\"\n          id=\"title-{{ task?.id }}\"\n          name=\"title-{{ task?.id }}\"\n          placeholder=\"Input title\"\n        />\n      </label>\n      <button\n        *ngIf=\"task?.state !== 'TASK_ARCHIVED'\"\n        class=\"pin-button\"\n        [attr.aria-label]=\"'pinTask-' + task?.id\"\n        (click)=\"onPin(task?.id)\"\n      >\n        <span class=\"icon-star\"></span>\n      </button>\n    </div>\n  `,\n    })\n], TaskComponent);\nexport default TaskComponent;\n"],"names":[],"sourceRoot":""}