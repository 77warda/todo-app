{"version":3,"file":"todo-list-todo-list-component-stories.cc2b9e4748952b979354.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sources":["webpack://@org/source/./todo/src/app/todo-list/todo-list.component.ts"],"sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./todo-list.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./todo-list.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { TodoServiceService } from '../todo-service.service';\nexport let TodoListComponent = class TodoListComponent {\n    constructor(fb, todoService) {\n        this.fb = fb;\n        this.todoService = todoService;\n        this.todos = [];\n        this.deleteTodoItem = new EventEmitter();\n        this.markAsComplete = new EventEmitter();\n        this.isLoading = false;\n        this.filter = 'all';\n    }\n    ngOnInit() {\n        console.log('child todos', this.todos);\n    }\n    // fetchTodos() {\n    //   this.todoService.getTodos().subscribe((response) => {\n    //     this.todos = response.map((todo) => ({ ...todo, isLoading: true }));\n    //     this.isLoading = true;\n    //     setTimeout(() => {\n    //       this.todos.forEach((todo) => (todo.isLoading = false));\n    //       this.isLoading = false; // Set isLoading to false once data is loaded\n    //     }, 2000);\n    //   });\n    // }\n    deleteTodo(todoId) {\n        this.deleteTodoItem.emit(todoId);\n    }\n    markCompleted(todo) {\n        this.markAsComplete.emit(todo);\n    }\n    getCountOfTodos() {\n        return this.todos.length;\n    }\n    clearCompleted() {\n        // const completedTodos = this.todos.filter((todo) => todo.complete);\n        // completedTodos.forEach((todo) => {\n        //   this.todoService.deleteTodo(todo.id).subscribe(() => {\n        //     this.todos = this.todos.filter((t) => t.id !== todo.id);\n        //   });\n        // });\n    }\n    getFilteredTodos() {\n        if (this.filter === 'active') {\n            return this.todos.filter((todo) => !todo.complete);\n        }\n        else if (this.filter === 'completed') {\n            return this.todos.filter((todo) => todo.complete);\n        }\n        else {\n            return this.todos;\n        }\n    }\n    setFilter(filter) {\n        this.filter = filter;\n    }\n    static { this.ctorParameters = () => [\n        { type: FormBuilder },\n        { type: TodoServiceService }\n    ]; }\n    static { this.propDecorators = {\n        todos: [{ type: Input }],\n        deleteTodoItem: [{ type: Output }],\n        markAsComplete: [{ type: Output }]\n    }; }\n};\nTodoListComponent = __decorate([\n    Component({\n        selector: 'org-todo-list',\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    }),\n    __metadata(\"design:paramtypes\", [FormBuilder,\n        TodoServiceService])\n], TodoListComponent);\n"],"names":[],"sourceRoot":""}