{"version":3,"file":"components-task-list-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;AC1EA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;;;;;;;;;;;ACDA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAGA;AACA;;;;;;;;;;ACrDA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;ACrEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;AC9BA;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnCA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@org/source/./todo/src/app/components/task-list.stories.ts","webpack://@org/source/./todo/src/app/components/task.stories.ts","webpack://@org/source/./todo/src/app/components/task-list.component.ts","webpack://@org/source/./todo/src/app/components/task.component.ts","webpack://@org/source/./node_modules/@storybook/addon-actions/dist/chunk-GOSXJPAJ.mjs","webpack://@org/source/./node_modules/@storybook/addon-actions/dist/index.mjs","webpack://@org/source/./node_modules/@storybook/angular/dist/client/argsToTemplate.js","webpack://@org/source/./node_modules/@storybook/angular/dist/client/decorators.js","webpack://@org/source/./node_modules/@storybook/angular/dist/client/index.js","webpack://@org/source/./node_modules/@storybook/angular/dist/client/public-api.js","webpack://@org/source/./node_modules/@storybook/angular/dist/client/public-types.js","webpack://@org/source/./node_modules/@storybook/angular/dist/index.mjs"],"sourcesContent":["import { componentWrapperDecorator, moduleMetadata } from '@storybook/angular';\nimport { CommonModule } from '@angular/common';\nimport TaskListComponent from './task-list.component';\nimport TaskComponent from './task.component';\nimport * as TaskStories from './task.stories';\nconst meta = {\n    component: TaskListComponent,\n    title: 'TaskList',\n    tags: ['autodocs'],\n    decorators: [\n        moduleMetadata({\n            //ðŸ‘‡ Imports both components to allow component composition with Storybook\n            declarations: [TaskListComponent, TaskComponent],\n            imports: [CommonModule],\n        }),\n        //ðŸ‘‡ Wraps our stories with a decorator\n        componentWrapperDecorator((story) => `<div style=\"margin: 3em\">${story}</div>`),\n    ],\n    render: (args) => ({\n        props: {\n            ...args,\n            onPinTask: TaskStories.actionsData.onPinTask,\n            onArchiveTask: TaskStories.actionsData.onArchiveTask,\n        },\n    }),\n};\nexport default meta;\nexport const Default = {\n    args: {\n        tasks: [\n            { ...TaskStories.Default.args?.task, id: '1', title: 'Task 1' },\n            { ...TaskStories.Default.args?.task, id: '2', title: 'Task 2' },\n            { ...TaskStories.Default.args?.task, id: '3', title: 'Task 3' },\n            { ...TaskStories.Default.args?.task, id: '4', title: 'Task 4' },\n            { ...TaskStories.Default.args?.task, id: '5', title: 'Task 5' },\n            { ...TaskStories.Default.args?.task, id: '6', title: 'Task 6' },\n        ],\n    },\n};\nexport const WithPinnedTasks = {\n    args: {\n        tasks: [\n            // Shaping the stories through args composition.\n            // Inherited data coming from the Default story.\n            ...(Default.args?.tasks?.slice(0, 5) || []),\n            { id: '6', title: 'Task 6 (pinned)', state: 'TASK_PINNED' },\n        ],\n    },\n};\nexport const Loading = {\n    args: {\n        tasks: [],\n        loading: true,\n    },\n};\nexport const Empty = {\n    args: {\n        // Shaping the stories through args composition.\n        // Inherited data coming from the Loading story.\n        ...Loading.args,\n        loading: false,\n    },\n};\n","import { action } from '@storybook/addon-actions';\nimport TaskComponent from './task.component';\nexport const actionsData = {\n    onPinTask: action('onPinTask'),\n    onArchiveTask: action('onArchiveTask'),\n};\nconst meta = {\n    title: 'Task',\n    component: TaskComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    render: (args) => ({\n        props: {\n            ...args,\n            onPinTask: actionsData.onPinTask,\n            onArchiveTask: actionsData.onArchiveTask,\n        },\n    }),\n};\nexport default meta;\nexport const Default = {\n    args: {\n        task: {\n            id: '1',\n            title: 'Test Task',\n            state: 'TASK_INBOX',\n            description: 'TASK_INBOX',\n        },\n    },\n};\nexport const Pinned = {\n    args: {\n        task: {\n            ...Default.args?.task,\n            state: 'TASK_PINNED',\n        },\n    },\n};\nexport const Archived = {\n    args: {\n        task: {\n            ...Default.args?.task,\n            state: 'TASK_ARCHIVED',\n        },\n    },\n};\n","import { __decorate } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nlet TaskListComponent = class TaskListComponent {\n    constructor() {\n        this.tasks = [];\n        this.loading = false;\n        this.onPinTask = new EventEmitter();\n        this.onArchiveTask = new EventEmitter();\n    }\n    static { this.propDecorators = {\n        tasks: [{ type: Input }],\n        loading: [{ type: Input }],\n        onPinTask: [{ type: Output }],\n        onArchiveTask: [{ type: Output }]\n    }; }\n};\nTaskListComponent = __decorate([\n    Component({\n        selector: 'app-task-list',\n        template: `\n    <div class=\"list-items\">\n      <div *ngIf=\"loading\">loading</div>\n      <div *ngIf=\"!loading && tasks.length === 0\">empty</div>\n      <app-task\n        *ngFor=\"let task of tasks\"\n        [task]=\"task\"\n        (onArchiveTask)=\"onArchiveTask.emit($event)\"\n        (onPinTask)=\"onPinTask.emit($event)\"\n      >\n      </app-task>\n    </div>\n  `,\n    })\n], TaskListComponent);\nexport default TaskListComponent;\n","import { __decorate } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nlet TaskComponent = class TaskComponent {\n    constructor() {\n        this.PinTask = new EventEmitter();\n        this.ArchiveTask = new EventEmitter();\n    }\n    /**\n     * @ignore\n     * Component method to trigger the onPin event\n     * @param id string\n     */\n    onPin(id) {\n        this.PinTask.emit(id);\n    }\n    /**\n     * @ignore\n     * Component method to trigger the onArchive event\n     * @param id string\n     */\n    onArchive(id) {\n        this.ArchiveTask.emit(id);\n    }\n    static { this.propDecorators = {\n        task: [{ type: Input }],\n        PinTask: [{ type: Output }],\n        ArchiveTask: [{ type: Output }]\n    }; }\n};\nTaskComponent = __decorate([\n    Component({\n        selector: 'org-app-task',\n        template: `\n    <div class=\"list-item {{ task?.state }}\">\n      <label\n        [attr.aria-label]=\"'archiveTask-' + task?.id\"\n        for=\"checked-{{ task?.id }}\"\n        class=\"checkbox\"\n      >\n        <input\n          type=\"checkbox\"\n          disabled=\"true\"\n          [defaultChecked]=\"task?.state === 'TASK_ARCHIVED'\"\n          name=\"checked-{{ task?.id }}\"\n          id=\"checked-{{ task?.id }}\"\n        />\n        <span class=\"checkbox-custom\" (click)=\"onArchive(task?.id)\"></span>\n      </label>\n      <label\n        [attr.aria-label]=\"task?.title + ''\"\n        for=\"title-{{ task?.id }}\"\n        class=\"title\"\n      >\n        <input\n          type=\"text\"\n          [value]=\"task?.title\"\n          readonly=\"true\"\n          id=\"title-{{ task?.id }}\"\n          name=\"title-{{ task?.id }}\"\n          placeholder=\"Input title\"\n        />\n      </label>\n      <button\n        *ngIf=\"task?.state !== 'TASK_ARCHIVED'\"\n        class=\"pin-button\"\n        [attr.aria-label]=\"'pinTask-' + task?.id\"\n        (click)=\"onPin(task?.id)\"\n      >\n        <span class=\"icon-star\"></span>\n      </button>\n    </div>\n  `,\n    })\n], TaskComponent);\nexport default TaskComponent;\n","import { config, action } from './chunk-AY7I2SME.mjs';\n\nvar actions=(...args)=>{let options=config,names=args;names.length===1&&Array.isArray(names[0])&&([names]=names),names.length!==1&&typeof names[names.length-1]!=\"string\"&&(options={...config,...names.pop()});let namesObject=names[0];(names.length!==1||typeof namesObject==\"string\")&&(namesObject={},names.forEach(name=>{namesObject[name]=name;}));let actionsObject={};return Object.keys(namesObject).forEach(name=>{actionsObject[name]=action(namesObject[name],options);}),actionsObject};\n\nexport { actions };\n","export { actions } from './chunk-GOSXJPAJ.mjs';\nexport { action, config, configureActions } from './chunk-AY7I2SME.mjs';\nexport { ADDON_ID, CLEAR_ID, CYCLIC_KEY, EVENT_ID, PANEL_ID, PARAM_KEY } from './chunk-VWCVBQ22.mjs';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.argsToTemplate = void 0;\n/**\n * Converts an object of arguments to a string of property and event bindings and excludes undefined values.\n * Why? Because Angular treats undefined values in property bindings as an actual value\n * and does not apply the default value of the property as soon as the binding is set.\n * This feels counter-intuitive and is a common source of bugs in stories.\n * @example\n * ```ts\n * // component.ts\n *ã…¤@Component({ selector: 'example' })\n *  export class ExampleComponent {\n *   ã…¤@Input() input1: string = 'Default Input1';\n *   ã…¤@Input() input2: string = 'Default Input2';\n *   ã…¤@Output() click = new EventEmitter();\n *  }\n *\n * // component.stories.ts\n * import { argsToTemplate } from '@storybook/angular';\n * export const Input1: Story = {\n *  render: (args) => ({\n *    props: args,\n *    // Problem1: <example [input1]=\"input1\" [input2]=\"input2\" (click)=\"click($event)\"></example>\n *    // This will set input2 to undefined and the internal default value will not be used.\n *    // Problem2: <example [input1]=\"input1\" (click)=\"click($event)\"></example>\n *    // The default value of input2 will be used, but it is not overridable by the user via controls.\n *    // Solution: Now the controls will be applicable to both input1 and input2, and the default values will be used if the user does not override them.\n *    template: `<example ${argsToTemplate(args)}\"></example>`,\n *  }),\n *  args: {\n *    // In this Story, we want to set the input1 property, and the internal default property of input2 should be used.\n *    input1: 'Input 1',\n *    click: { action: 'clicked' },\n *  },\n *};\n * ```\n */\nfunction argsToTemplate(args, options = {}) {\n    const includeSet = options.include ? new Set(options.include) : null;\n    const excludeSet = options.exclude ? new Set(options.exclude) : null;\n    return Object.entries(args)\n        .filter(([key]) => args[key] !== undefined)\n        .filter(([key]) => {\n        if (includeSet)\n            return includeSet.has(key);\n        if (excludeSet)\n            return !excludeSet.has(key);\n        return true;\n    })\n        .map(([key, value]) => typeof value === 'function' ? `(${key})=\"${key}($event)\"` : `[${key}]=\"${key}\"`)\n        .join(' ');\n}\nexports.argsToTemplate = argsToTemplate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.componentWrapperDecorator = exports.applicationConfig = exports.moduleMetadata = void 0;\nconst ComputesTemplateFromComponent_1 = require(\"./angular-beta/ComputesTemplateFromComponent\");\nconst NgComponentAnalyzer_1 = require(\"./angular-beta/utils/NgComponentAnalyzer\");\n// We use `any` here as the default type rather than `Args` because we need something that is\n// castable to any component-specific args type when the user is being careful.\nconst moduleMetadata = (metadata) => (storyFn) => {\n    const story = storyFn();\n    const storyMetadata = story.moduleMetadata || {};\n    metadata = metadata || {};\n    return {\n        ...story,\n        moduleMetadata: {\n            declarations: [...(metadata.declarations || []), ...(storyMetadata.declarations || [])],\n            entryComponents: [\n                ...(metadata.entryComponents || []),\n                ...(storyMetadata.entryComponents || []),\n            ],\n            imports: [...(metadata.imports || []), ...(storyMetadata.imports || [])],\n            schemas: [...(metadata.schemas || []), ...(storyMetadata.schemas || [])],\n            providers: [...(metadata.providers || []), ...(storyMetadata.providers || [])],\n        },\n    };\n};\nexports.moduleMetadata = moduleMetadata;\n/**\n * Decorator to set the config options which are available during the application bootstrap operation\n */\nfunction applicationConfig(\n/**\n * Set of config options available during the application bootstrap operation.\n */\nconfig) {\n    return (storyFn) => {\n        const story = storyFn();\n        const storyConfig = story.applicationConfig;\n        return {\n            ...story,\n            applicationConfig: storyConfig || config\n                ? {\n                    ...config,\n                    ...storyConfig,\n                    providers: [...(config?.providers || []), ...(storyConfig?.providers || [])],\n                }\n                : undefined,\n        };\n    };\n}\nexports.applicationConfig = applicationConfig;\nconst componentWrapperDecorator = (element, props) => (storyFn, storyContext) => {\n    const story = storyFn();\n    const currentProps = typeof props === 'function' ? props(storyContext) : props;\n    const template = (0, NgComponentAnalyzer_1.isComponent)(element)\n        ? (0, ComputesTemplateFromComponent_1.computesTemplateFromComponent)(element, currentProps ?? {}, story.template)\n        : element(story.template);\n    return {\n        ...story,\n        template,\n        ...(currentProps || story.props\n            ? {\n                props: {\n                    ...currentProps,\n                    ...story.props,\n                },\n            }\n            : {}),\n    };\n};\nexports.componentWrapperDecorator = componentWrapperDecorator;\n","\"use strict\";\n/// <reference types=\"webpack-env\" />\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.argsToTemplate = exports.applicationConfig = exports.componentWrapperDecorator = exports.moduleMetadata = void 0;\nrequire(\"./globals\");\n// eslint-disable-next-line import/export\n__exportStar(require(\"./public-api\"), exports);\n// eslint-disable-next-line import/export\n__exportStar(require(\"./public-types\"), exports);\nvar decorators_1 = require(\"./decorators\");\nObject.defineProperty(exports, \"moduleMetadata\", { enumerable: true, get: function () { return decorators_1.moduleMetadata; } });\nObject.defineProperty(exports, \"componentWrapperDecorator\", { enumerable: true, get: function () { return decorators_1.componentWrapperDecorator; } });\nObject.defineProperty(exports, \"applicationConfig\", { enumerable: true, get: function () { return decorators_1.applicationConfig; } });\nvar argsToTemplate_1 = require(\"./argsToTemplate\");\nObject.defineProperty(exports, \"argsToTemplate\", { enumerable: true, get: function () { return argsToTemplate_1.argsToTemplate; } });\n// optimization: stop HMR propagation in webpack\nif (typeof module !== 'undefined')\n    module?.hot?.decline();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.raw = exports.forceReRender = exports.configure = exports.storiesOf = void 0;\nconst preview_api_1 = require(\"@storybook/preview-api\");\nconst render_1 = require(\"./render\");\nconst decorateStory_1 = __importDefault(require(\"./decorateStory\"));\n__exportStar(require(\"./public-types\"), exports);\nconst RENDERER = 'angular';\nconst api = (0, preview_api_1.start)(render_1.renderToCanvas, { decorateStory: decorateStory_1.default, render: render_1.render });\nconst storiesOf = (kind, m) => {\n    return api.clientApi.storiesOf(kind, m).addParameters({\n        renderer: RENDERER,\n    });\n};\nexports.storiesOf = storiesOf;\nconst configure = (...args) => api.configure(RENDERER, ...args);\nexports.configure = configure;\nexports.forceReRender = api.forceReRender;\nexports.raw = api.clientApi.raw;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","export * from './client/index';\nexport * from './types';\n/*\n * ATTENTION:\n * - moduleMetadata\n * - NgModuleMetadata\n * - ICollection\n *\n * These typings are coped out of decorators.d.ts and types.d.ts in order to fix a bug with tsc\n * It was imported out of dist before which was not the proper way of exporting public API\n *\n * This can be fixed by migrating app/angular to typescript\n */\n"],"names":[],"sourceRoot":""}