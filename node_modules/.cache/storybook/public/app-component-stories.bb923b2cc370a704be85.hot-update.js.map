{"version":3,"file":"app-component-stories.bb923b2cc370a704be85.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AACA","sources":["webpack://@org/source/./todo/src/app/app.component.ts","webpack://@org/source/./todo/src/app/todo-service.service.ts"],"sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./app.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./app.component.scss?ngResource\";\nimport { Component } from \"@angular/core\";\nimport { TodoServiceService } from \"../app/todo-service.service\";\nimport { DataShareService } from \"./data-share.service\";\nexport let AppComponent = class AppComponent {\n    ngOnInit() {\n        this.todoService.getTodos().subscribe((todos) => {\n            console.log(\"Server Response - Todos: \", todos);\n            this.allTodos = todos;\n        });\n    }\n    constructor(todoEdit, todoService) {\n        this.todoEdit = todoEdit;\n        this.todoService = todoService;\n        this.isLoading = false;\n        this.selectedTodo = null;\n    }\n    editTodo(todo) {\n        this.selectedTodo = todo;\n    }\n    addTodo(newTodo) {\n        this.todoService.addTodo(newTodo).subscribe((response) => {\n            console.log(\"server response\", response);\n            this.allTodos.push(response);\n            this.fetchTodos();\n        });\n    }\n    updateTodo(updatedTodo) {\n        this.todoService\n            .updateTodo(updatedTodo.id, updatedTodo)\n            .subscribe((update) => {\n            const index = this.allTodos.findIndex((todo) => todo.id === updatedTodo.id);\n            if (index !== -1) {\n                this.allTodos[index] = update;\n            }\n        });\n    }\n    handleTodoUpdated(updatedTodo) {\n        this.todoEdit.selectedTodo$.subscribe((x) => {\n            this.selectedTodo = x;\n        });\n        if (this.selectedTodo) {\n            this.updateTodo(updatedTodo);\n        }\n        else {\n            this.addTodo(updatedTodo);\n        }\n        this.selectedTodo = null;\n    }\n    deleteTodo(todoId) {\n        console.log(\"delete\", todoId);\n        this.todoService.deleteTodo(todoId).subscribe(() => {\n            this.allTodos = this.allTodos.filter((todo) => todo.id !== todoId);\n            this.fetchTodos();\n        });\n    }\n    fetchTodos() {\n        this.todoService.getTodos().subscribe((todos) => {\n            this.allTodos = todos;\n        });\n    }\n    markCompleted(todo) {\n        console.log(\"mark complete\", todo);\n        if (todo.id !== undefined) {\n            this.todoService.markAsComplete(todo.id, !todo.complete).subscribe(() => {\n                todo.complete = !todo.complete;\n            });\n        }\n    }\n    clearCompleted() {\n        const completedTodoIds = this.allTodos\n            .filter((todo) => todo.complete && todo.id !== undefined)\n            .map((todo) => todo.id);\n        completedTodoIds.forEach((todoId) => {\n            this.todoService.deleteTodo(todoId).subscribe(() => {\n                this.allTodos = this.allTodos.filter((todo) => {\n                    return todo.id !== todoId;\n                });\n                this.fetchTodos();\n            });\n        });\n    }\n    static { this.ctorParameters = () => [\n        { type: DataShareService },\n        { type: TodoServiceService }\n    ]; }\n};\nAppComponent = __decorate([\n    Component({\n        selector: \"org-root\",\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    }),\n    __metadata(\"design:paramtypes\", [DataShareService,\n        TodoServiceService])\n], AppComponent);\n","import { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../environments/environment.development\";\nexport let TodoServiceService = class TodoServiceService {\n    constructor(http) {\n        this.http = http;\n        this.apiUrl = environment.apiUrl;\n    }\n    getTodos() {\n        return this.http.get(this.apiUrl);\n    }\n    addTodo(todo) {\n        return this.http.post(this.apiUrl, todo);\n    }\n    deleteTodo(todoId) {\n        return this.http.delete(`${this.apiUrl}/${todoId}`);\n    }\n    markAsComplete(todoId, status) {\n        return this.http.patch(`${this.apiUrl}/${todoId}`, {\n            complete: status,\n        });\n    }\n    updateTodo(id, updatedTodo) {\n        return this.http.patch(`${this.apiUrl}/${id}`, updatedTodo);\n    }\n    static { this.ctorParameters = () => [\n        { type: HttpClient }\n    ]; }\n};\nTodoServiceService = __decorate([\n    Injectable({\n        providedIn: \"root\",\n    }),\n    __metadata(\"design:paramtypes\", [HttpClient])\n], TodoServiceService);\n"],"names":[],"sourceRoot":""}