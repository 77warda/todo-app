{"version":3,"file":"todo-list-todo-list-component-stories.c4ebd00406058ca3164b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA","sources":["webpack://@org/source/./todo/src/app/todo-list/todo-list.component.ts","webpack://@org/source/./todo/src/app/todo-service.service.ts","webpack://@org/source/./todo/src/environments/environment.development.ts"],"sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./todo-list.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./todo-list.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TodoServiceService } from '../todo-service.service';\nexport let TodoListComponent = class TodoListComponent {\n    constructor(todoService) {\n        this.todoService = todoService;\n        this.todos = [];\n        this.deleteTodoItem = new EventEmitter();\n        this.markAsComplete = new EventEmitter();\n        this.clearcompletedItems = new EventEmitter();\n        this.isLoading = false;\n        this.filter = 'all';\n    }\n    ngOnInit() {\n        console.log('child todos', this.todos);\n    }\n    fetchTodos() {\n        this.todoService.getTodos().subscribe((response) => {\n            this.todos = response.map((todo) => ({ ...todo, isLoading: true }));\n            this.isLoading = true;\n            setTimeout(() => {\n                this.todos.forEach((todo) => (todo.isLoading = false));\n                this.isLoading = false; // Set isLoading to false once data is loaded\n            }, 2000);\n        });\n    }\n    deleteTodo(todoId) {\n        this.deleteTodoItem.emit(todoId);\n    }\n    markCompleted(todo) {\n        this.markAsComplete.emit(todo);\n    }\n    clearCompleted() {\n        this.clearcompletedItems.emit();\n    }\n    getFilteredTodos() {\n        if (this.filter === 'active') {\n            return this.todos.filter((todo) => !todo.complete);\n        }\n        else if (this.filter === 'completed') {\n            return this.todos.filter((todo) => todo.complete);\n        }\n        else {\n            return this.todos;\n        }\n    }\n    setFilter(filter) {\n        this.filter = filter;\n    }\n    static { this.ctorParameters = () => [\n        { type: TodoServiceService }\n    ]; }\n    static { this.propDecorators = {\n        todos: [{ type: Input }],\n        deleteTodoItem: [{ type: Output }],\n        markAsComplete: [{ type: Output }],\n        clearcompletedItems: [{ type: Output }]\n    }; }\n};\nTodoListComponent = __decorate([\n    Component({\n        selector: 'org-todo-list',\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    }),\n    __metadata(\"design:paramtypes\", [TodoServiceService])\n], TodoListComponent);\n","import { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment.development';\nexport let TodoServiceService = class TodoServiceService {\n    constructor(http) {\n        this.http = http;\n        this.apiUrl = environment.apiUrl;\n    }\n    getTodos() {\n        return this.http.get(this.apiUrl);\n    }\n    addTodo(todo) {\n        return this.http.post(this.apiUrl, todo);\n    }\n    deleteTodo(todoId) {\n        return this.http.delete(`${this.apiUrl}/${todoId}`);\n    }\n    markAsComplete(todoId, status) {\n        return this.http.patch(`${this.apiUrl}/${todoId}`, {\n            complete: status,\n        });\n    }\n    static { this.ctorParameters = () => [\n        { type: HttpClient }\n    ]; }\n};\nTodoServiceService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    }),\n    __metadata(\"design:paramtypes\", [HttpClient])\n], TodoServiceService);\n","export const environment = {\n    production: false,\n    apiUrl: 'http://localhost:3000/api/todos',\n};\n"],"names":[],"sourceRoot":""}