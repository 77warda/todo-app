{"version":3,"file":"app-component-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@org/source/./todo/src/app/app.component.stories.ts","webpack://@org/source/./todo/src/app/app.component.ts","webpack://@org/source/./todo/src/app/todo-service.service.ts","webpack://@org/source/./todo/src/environments/environment.development.ts","webpack://@org/source/./todo/src/app/app.component.scss"],"sourcesContent":["import { applicationConfig, } from '@storybook/angular';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { importProvidersFrom } from '@angular/core';\nconst meta = {\n    component: AppComponent,\n    title: 'AppComponent',\n    decorators: [\n        applicationConfig({ providers: [importProvidersFrom(HttpClientModule)] }),\n    ],\n};\nexport default meta;\nexport const Primary = {\n    args: {},\n};\n// export const Heading: Story = {\n//   args: {},\n//   play: async ({ canvasElement }) => {\n//     const canvas = within(canvasElement);\n//     expect(canvas.getByText(/app works!/gi)).toBeTruthy();\n//   },\n// };\n","import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./app.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./app.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { TodoServiceService } from '../app/todo-service.service';\nexport let AppComponent = class AppComponent {\n    ngOnInit() {\n        console.log('warda', this.fetchTodos());\n        this.todoService.getTodos().subscribe((todos) => {\n            this.allTodos = todos;\n        });\n    }\n    constructor(todoService) {\n        this.todoService = todoService;\n        this.isLoading = false;\n    }\n    addTodo(newTodo) {\n        console.log('parent', newTodo);\n        this.todoService.addTodo(newTodo).subscribe((response) => {\n            this.allTodos.push(response);\n            this.fetchTodos();\n        });\n    }\n    deleteTodo(todoId) {\n        this.todoService.deleteTodo(todoId).subscribe(() => {\n            this.allTodos = this.allTodos.filter((todo) => todo.id !== todoId);\n            this.fetchTodos();\n        });\n    }\n    fetchTodos() {\n        this.todoService.getTodos().subscribe((todos) => {\n            this.allTodos = todos;\n        });\n    }\n    markCompleted(todo) {\n        if (todo.id !== undefined) {\n            this.todoService.markAsComplete(todo.id, !todo.complete).subscribe(() => {\n                todo.complete = !todo.complete;\n            });\n        }\n    }\n    clearCompleted() {\n        const completedTodoIds = this.allTodos\n            .filter((todo) => todo.complete && todo.id !== undefined)\n            .map((todo) => todo.id);\n        completedTodoIds.forEach((todoId) => {\n            this.todoService.deleteTodo(todoId).subscribe(() => {\n                this.allTodos = this.allTodos.filter((todo) => {\n                    return todo.id !== todoId;\n                });\n                this.fetchTodos();\n            });\n        });\n    }\n    static { this.ctorParameters = () => [\n        { type: TodoServiceService }\n    ]; }\n};\nAppComponent = __decorate([\n    Component({\n        selector: 'org-root',\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    }),\n    __metadata(\"design:paramtypes\", [TodoServiceService])\n], AppComponent);\n","import { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment.development';\nexport let TodoServiceService = class TodoServiceService {\n    constructor(http) {\n        this.http = http;\n        this.apiUrl = environment.apiUrl;\n    }\n    getTodos() {\n        return this.http.get(this.apiUrl);\n    }\n    addTodo(todo) {\n        return this.http.post(this.apiUrl, todo);\n    }\n    deleteTodo(todoId) {\n        return this.http.delete(`${this.apiUrl}/${todoId}`);\n    }\n    markAsComplete(todoId, status) {\n        return this.http.patch(`${this.apiUrl}/${todoId}`, {\n            complete: status,\n        });\n    }\n    static { this.ctorParameters = () => [\n        { type: HttpClient }\n    ]; }\n};\nTodoServiceService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    }),\n    __metadata(\"design:paramtypes\", [HttpClient])\n], TodoServiceService);\n","export const environment = {\n    production: false,\n    apiUrl: 'http://localhost:3000/api/todos',\n};\n","// Imports\nvar ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n  width: 100%;\n  height: 100vh;\n  background-color: hsl(235, 21%, 11%);\n  font-family: system-ui;\n}\n\n.banner-con {\n  width: 100%;\n  height: 60vh;\n}\n.banner-con .banner {\n  width: 100%;\n  height: 100%;\n  background: url('bg-desktop-dark.b69c129621b067f4.jpg');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.banner-con .banner .content {\n  width: 600px;\n  display: flex;\n  justify-content: space-between;\n  margin-top: 40vh;\n}\n.banner-con .banner .content h1 {\n  letter-spacing: 3px;\n  color: #fff;\n}\n.banner-con .banner .content img {\n  height: 34px;\n}`, \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":[],"sourceRoot":""}