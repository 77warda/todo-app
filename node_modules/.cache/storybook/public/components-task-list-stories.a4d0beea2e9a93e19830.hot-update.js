"use strict";
self["webpackHotUpdate_org_source"]("components-task-list-stories",{

/***/ "./todo/src/app/components/task-list.stories.ts":
/*!******************************************************!*\
  !*** ./todo/src/app/components/task-list.stories.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   Empty: () => (/* binding */ Empty),
/* harmony export */   Loading: () => (/* binding */ Loading),
/* harmony export */   WithPinnedTasks: () => (/* binding */ WithPinnedTasks),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storybook/angular */ "./node_modules/@storybook/angular/dist/index.mjs");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2022/common.mjs");
/* harmony import */ var _task_list_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./task-list.component */ "./todo/src/app/components/task-list.component.ts");
/* harmony import */ var _task_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./task.component */ "./todo/src/app/components/task.component.ts");
/* harmony import */ var _task_stories__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./task.stories */ "./todo/src/app/components/task.stories.ts");





const meta = {
  component: _task_list_component__WEBPACK_IMPORTED_MODULE_1__["default"],
  title: 'TaskList',
  tags: ['autodocs'],
  decorators: [(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({
    //ðŸ‘‡ Imports both components to allow component composition with Storybook
    declarations: [_task_list_component__WEBPACK_IMPORTED_MODULE_1__["default"], _task_component__WEBPACK_IMPORTED_MODULE_2__["default"]],
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule]
  }),
  //ðŸ‘‡ Wraps our stories with a decorator
  (0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)(story => `<div style="margin: 3em">${story}</div>`)],
  render: args => ({
    props: {
      ...args,
      onPinTask: _task_stories__WEBPACK_IMPORTED_MODULE_3__.actionsData.onPinTask,
      onArchiveTask: _task_stories__WEBPACK_IMPORTED_MODULE_3__.actionsData.onArchiveTask
    }
  })
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const Default = {
  args: {
    tasks: [{
      ..._task_stories__WEBPACK_IMPORTED_MODULE_3__.Default.args?.task,
      id: '1',
      title: 'Task 1'
    }, {
      ..._task_stories__WEBPACK_IMPORTED_MODULE_3__.Default.args?.task,
      id: '2',
      title: 'Task 2'
    }, {
      ..._task_stories__WEBPACK_IMPORTED_MODULE_3__.Default.args?.task,
      id: '3',
      title: 'Task 3'
    }, {
      ..._task_stories__WEBPACK_IMPORTED_MODULE_3__.Default.args?.task,
      id: '4',
      title: 'Task 4'
    }, {
      ..._task_stories__WEBPACK_IMPORTED_MODULE_3__.Default.args?.task,
      id: '5',
      title: 'Task 5'
    }, {
      ..._task_stories__WEBPACK_IMPORTED_MODULE_3__.Default.args?.task,
      id: '6',
      title: 'Task 6'
    }]
  }
};
const WithPinnedTasks = {
  args: {
    tasks: [
    // Shaping the stories through args composition.
    // Inherited data coming from the Default story.
    ...(Default.args?.tasks?.slice(0, 5) || []), {
      id: '6',
      title: 'Task 6 (pinned)',
      state: 'TASK_PINNED'
    }]
  }
};
const Loading = {
  args: {
    tasks: [],
    loading: true
  }
};
const Empty = {
  args: {
    // Shaping the stories through args composition.
    // Inherited data coming from the Loading story.
    ...Loading.args,
    loading: false
  }
};

/***/ }),

/***/ "./todo/src/app/components/task.stories.ts":
/*!*************************************************!*\
  !*** ./todo/src/app/components/task.stories.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Archived: () => (/* binding */ Archived),
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   Pinned: () => (/* binding */ Pinned),
/* harmony export */   actionsData: () => (/* binding */ actionsData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storybook/addon-actions */ "./node_modules/@storybook/addon-actions/dist/index.mjs");
/* harmony import */ var _task_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./task.component */ "./todo/src/app/components/task.component.ts");


const actionsData = {
  onPinTask: (0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.action)('onPinTask'),
  onArchiveTask: (0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.action)('onArchiveTask')
};
const meta = {
  title: 'Task',
  component: _task_component__WEBPACK_IMPORTED_MODULE_1__["default"],
  excludeStories: /.*Data$/,
  tags: ['autodocs'],
  render: args => ({
    props: {
      ...args,
      onPinTask: actionsData.onPinTask,
      onArchiveTask: actionsData.onArchiveTask
    }
  })
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const Default = {
  args: {
    task: {
      id: '1',
      title: 'Test Task',
      state: 'TASK_INBOX',
      description: 'TASK_INBOX'
    }
  }
};
const Pinned = {
  args: {
    task: {
      ...Default.args?.task,
      state: 'TASK_PINNED'
    }
  }
};
const Archived = {
  args: {
    task: {
      ...Default.args?.task,
      state: 'TASK_ARCHIVED'
    }
  }
};

/***/ }),

/***/ "./todo/src/app/components/task.component.ts":
/*!***************************************************!*\
  !*** ./todo/src/app/components/task.component.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2022/core.mjs");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '../models/task.model'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());



let TaskComponent = class TaskComponent {
  constructor() {
    this.PinTask = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    this.ArchiveTask = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
  }
  /**
   * @ignore
   * Component method to trigger the onPin event
   * @param id string
   */
  onPin(id) {
    this.onPinTask.emit(id);
  }
  /**
   * @ignore
   * Component method to trigger the onArchive event
   * @param id string
   */
  onArchive(id) {
    this.onArchiveTask.emit(id);
  }
  static #_ = this.propDecorators = {
    task: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    PinTask: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
    }],
    ArchiveTask: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
    }]
  };
};
TaskComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({
  selector: 'app-task',
  template: `
    <div class="list-item {{ task?.state }}">
      <label
        [attr.aria-label]="'archiveTask-' + task?.id"
        for="checked-{{ task?.id }}"
        class="checkbox"
      >
        <input
          type="checkbox"
          disabled="true"
          [defaultChecked]="task?.state === 'TASK_ARCHIVED'"
          name="checked-{{ task?.id }}"
          id="checked-{{ task?.id }}"
        />
        <span class="checkbox-custom" (click)="onArchive(task?.id)"></span>
      </label>
      <label
        [attr.aria-label]="task?.title + ''"
        for="title-{{ task?.id }}"
        class="title"
      >
        <input
          type="text"
          [value]="task?.title"
          readonly="true"
          id="title-{{ task?.id }}"
          name="title-{{ task?.id }}"
          placeholder="Input title"
        />
      </label>
      <button
        *ngIf="task?.state !== 'TASK_ARCHIVED'"
        class="pin-button"
        [attr.aria-label]="'pinTask-' + task?.id"
        (click)="onPin(task?.id)"
      >
        <span class="icon-star"></span>
      </button>
    </div>
  `
})], TaskComponent);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TaskComponent);

/***/ })

});
//# sourceMappingURL=components-task-list-stories.a4d0beea2e9a93e19830.hot-update.js.map