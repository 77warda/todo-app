{"version":3,"file":"new-todos-new-todos-component-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@org/source/./todo/src/app/new-todos/new-todos.component.stories.ts","webpack://@org/source/./todo/src/app/data-share.service.ts","webpack://@org/source/./todo/src/app/new-todos/new-todos.component.ts","webpack://@org/source/./todo/src/app/new-todos/new-todos.component.scss"],"sourcesContent":["import { applicationConfig, } from '@storybook/angular';\nimport { NewTodosComponent } from './new-todos.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { importProvidersFrom } from '@angular/core';\nconst meta = {\n    component: NewTodosComponent,\n    title: 'NewTodosComponent',\n    decorators: [\n        applicationConfig({ providers: [importProvidersFrom(HttpClientModule)] }),\n    ],\n};\nexport default meta;\nexport const Primary = {\n    args: {},\n};\n// export const Heading: Story = {\n//   args: {},\n//   play: async ({ canvasElement }) => {\n//     const canvas = within(canvasElement);\n//     expect(canvas.getByText(/new-todos works!/gi)).toBeTruthy();\n//   },\n// };\n","import { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nexport let DataShareService = class DataShareService {\n    constructor() {\n        this.selectedTodo = new BehaviorSubject(null);\n        this.selectedTodo$ = this.selectedTodo.asObservable();\n    }\n    setTodo(todo) {\n        this.selectedTodo.next(todo);\n    }\n    clearTodo() {\n        this.selectedTodo.next(null);\n    }\n    static { this.ctorParameters = () => []; }\n};\nDataShareService = __decorate([\n    Injectable({\n        providedIn: \"root\",\n    }),\n    __metadata(\"design:paramtypes\", [])\n], DataShareService);\n","import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./new-todos.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./new-todos.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { Validators, FormBuilder } from \"@angular/forms\";\nimport { DataShareService } from \"../data-share.service\";\nexport let NewTodosComponent = class NewTodosComponent {\n    constructor(fb, todoEditService) {\n        this.fb = fb;\n        this.todoEditService = todoEditService;\n        this.selectedTodo = null;\n        this.addTodoItem = new EventEmitter();\n        this.todoUpdated = new EventEmitter();\n        this.todoForm = this.fb.group({\n            name: [\"\", Validators.required],\n        });\n        this.todos = [];\n        this.selectedSubscription = this.todoEditService.selectedTodo$.subscribe((selectedTodo) => {\n            this.selectedTodo = selectedTodo;\n            this.todoForm.patchValue({\n                name: selectedTodo ? selectedTodo.name : \"\",\n            });\n        });\n    }\n    ngOnInit() {\n        this.todoForm = this.fb.group({\n            name: [\"\", Validators.required],\n        });\n    }\n    // addTodo() {\n    //   if (this.todoForm.valid) {\n    //     const newTodo = this.todoForm.value;\n    //     this.todoForm.reset();\n    //     this.addTodoItem.emit(newTodo);\n    //   }\n    // }\n    onSubmit() {\n        if (this.todoForm.valid) {\n            const newTodo = this.todoForm.value;\n            this.todoUpdated.emit(newTodo);\n            this.todoForm.reset();\n        }\n    }\n    ngOnDestroy() {\n        this.selectedSubscription.unsubscribe();\n    }\n    static { this.ctorParameters = () => [\n        { type: FormBuilder },\n        { type: DataShareService }\n    ]; }\n    static { this.propDecorators = {\n        selectedTodo: [{ type: Input }],\n        addTodoItem: [{ type: Output }],\n        todoUpdated: [{ type: Output }]\n    }; }\n};\nNewTodosComponent = __decorate([\n    Component({\n        selector: \"org-new-todos\",\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    }),\n    __metadata(\"design:paramtypes\", [FormBuilder,\n        DataShareService])\n], NewTodosComponent);\n","// Imports\nvar ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.todo {\n  width: 600px;\n  max-height: 498px;\n}\n.todo form {\n  width: 100%;\n  height: 83px;\n  position: relative;\n}\n.todo form input {\n  width: 95%;\n  padding: 15px 30px;\n  border-radius: 5px;\n  margin-top: 2rem;\n  background: hsl(235, 24%, 19%);\n  font-size: 16px;\n  color: #fff;\n  letter-spacing: 1px;\n  outline: none;\n  border: none;\n}\n.todo form input::placeholder {\n  color: #fff;\n  letter-spacing: 2px;\n}\n.todo form .pos-abs {\n  position: absolute;\n  right: 0px;\n  top: 57%;\n}\n.todo form button {\n  background-color: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n}\n.todo form button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n.todo form button img {\n  height: 15px;\n  width: auto;\n}`, \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":[],"sourceRoot":""}