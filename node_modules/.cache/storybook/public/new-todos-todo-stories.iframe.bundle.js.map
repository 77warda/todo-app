{"version":3,"file":"new-todos-todo-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@org/source/./todo/src/app/new-todos/todo.stories.ts","webpack://@org/source/./todo/src/app/new-todos/new-todos.component.ts","webpack://@org/source/./todo/src/app/todo-service.service.ts","webpack://@org/source/./todo/src/environments/environment.development.ts","webpack://@org/source/./todo/src/app/new-todos/new-todos.component.scss"],"sourcesContent":["// todo.stories.ts\nimport { moduleMetadata } from '@storybook/angular';\nimport { NewTodosComponent } from './new-todos.component';\nimport { HttpClientModule } from '@angular/common/http';\nexport default {\n    title: 'Todo Component',\n    component: NewTodosComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [HttpClientModule],\n            declarations: [NewTodosComponent],\n        }),\n    ],\n};\nconst Template = (args) => ({\n    component: NewTodosComponent,\n    props: args,\n});\nexport const Default = Template.bind({});\nDefault.args = {};\n","import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./new-todos.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./new-todos.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { TodoServiceService } from '../todo-service.service';\nexport let NewTodosComponent = class NewTodosComponent {\n    constructor(fb, todoService) {\n        this.fb = fb;\n        this.todoService = todoService;\n        this.todoForm = this.fb.group({\n            name: ['', Validators.required],\n        });\n        this.todos = [];\n        this.filter = 'all';\n    }\n    ngOnInit() {\n        this.todoForm = this.fb.group({\n            name: ['', Validators.required],\n        });\n        this.fetchTodos();\n    }\n    fetchTodos() {\n        this.todoService.getTodos().subscribe((response) => {\n            this.todos = response;\n        });\n    }\n    addTodo() {\n        if (this.todoForm.valid) {\n            const newTodo = this.todoForm.value;\n            this.todoService.addTodo(newTodo).subscribe((response) => {\n                this.todos.push(response);\n                console.log('warda', this.todos);\n                this.todoForm.reset();\n            });\n        }\n    }\n    deleteTodo(todoId) {\n        this.todoService.deleteTodo(todoId).subscribe(() => {\n            this.todos = this.todos.filter((todo) => todo.id !== todoId);\n        });\n    }\n    markCompleted(todo) {\n        this.todoService\n            .markAsComplete(todo.id, todo.complete)\n            .subscribe((response) => {\n            console.log('Todo status updated successfully:', response);\n            todo.complete = !todo.complete;\n        });\n    }\n    getCountOfTodos() {\n        return this.todos.length;\n    }\n    clearCompleted() {\n        const completedTodos = this.todos.filter((todo) => todo.complete);\n        completedTodos.forEach((todo) => {\n            this.todoService.deleteTodo(todo.id).subscribe(() => {\n                this.todos = this.todos.filter((t) => t.id !== todo.id);\n            });\n        });\n    }\n    getFilteredTodos() {\n        if (this.filter === 'active') {\n            return this.todos.filter((todo) => !todo.complete);\n        }\n        else if (this.filter === 'completed') {\n            return this.todos.filter((todo) => todo.complete);\n        }\n        else {\n            return this.todos;\n        }\n    }\n    setFilter(filter) {\n        this.filter = filter;\n    }\n    static { this.ctorParameters = () => [\n        { type: FormBuilder },\n        { type: TodoServiceService }\n    ]; }\n};\nNewTodosComponent = __decorate([\n    Component({\n        selector: 'org-new-todos',\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    }),\n    __metadata(\"design:paramtypes\", [FormBuilder,\n        TodoServiceService])\n], NewTodosComponent);\n","import { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment.development';\nexport let TodoServiceService = class TodoServiceService {\n    constructor(http) {\n        this.http = http;\n        this.apiUrl = environment.apiUrl;\n    }\n    getTodos() {\n        return this.http.get(this.apiUrl);\n    }\n    addTodo(todo) {\n        return this.http.post(this.apiUrl, todo);\n    }\n    deleteTodo(todoId) {\n        return this.http.delete(`${this.apiUrl}/${todoId}`);\n    }\n    markAsComplete(todoId, status) {\n        return this.http.patch(`${this.apiUrl}/${todoId}`, {\n            complete: status,\n        });\n    }\n    static { this.ctorParameters = () => [\n        { type: HttpClient }\n    ]; }\n};\nTodoServiceService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    }),\n    __metadata(\"design:paramtypes\", [HttpClient])\n], TodoServiceService);\n","export const environment = {\n    production: false,\n    apiUrl: 'http://localhost:3000/api/todos',\n};\n","// Imports\nvar ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n  width: 100%;\n  height: 100vh;\n  background-color: hsl(235, 21%, 11%);\n  font-family: system-ui;\n}\n\n.banner-con {\n  width: 100%;\n  height: 60vh;\n}\n.banner-con .banner {\n  width: 100%;\n  height: 100%;\n  background: url('bg-desktop-light.c2b0ff8fcc1f6c0b.jpg');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.banner-con .banner .content {\n  width: 600px;\n  display: flex;\n  justify-content: space-between;\n  margin-top: 40vh;\n}\n.banner-con .banner .content h1 {\n  letter-spacing: 3px;\n  color: #fff;\n}\n.banner-con .banner .content img {\n  height: 34px;\n}\n.banner-con .todo {\n  width: 600px;\n  max-height: 498px;\n}\n.banner-con .todo form {\n  width: 100%;\n  height: 83px;\n  position: relative;\n}\n.banner-con .todo form input {\n  width: 95%;\n  padding: 15px 30px;\n  border-radius: 5px;\n  margin-top: 2rem;\n  background: hsl(235, 24%, 19%);\n  font-size: 16px;\n  color: #fff;\n  letter-spacing: 1px;\n  outline: none;\n  border: none;\n}\n.banner-con .todo form input::placeholder {\n  color: #fff;\n  letter-spacing: 2px;\n}\n.banner-con .todo form .pos-abs {\n  position: absolute;\n  right: 0px;\n  top: 57%;\n}\n.banner-con .todo form button {\n  background-color: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n}\n.banner-con .todo form button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n.banner-con .todo form button img {\n  height: 15px;\n  width: auto;\n}\n\n.list {\n  width: 100%;\n  max-height: 330px;\n  margin-top: 2rem;\n}\n.list .todo-con {\n  width: 100%;\n  background-color: hsl(235, 24%, 19%);\n  border-radius: 5px;\n}\n.list .todo-con .todo-li {\n  display: flex;\n  background-color: hsl(235, 24%, 19%);\n  padding: 1rem 0.9rem;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n  font-style: italic;\n  font-size: 18px;\n  align-items: center;\n  width: 100%;\n}\n.list .todo-con .todo-li p {\n  width: 92%;\n  color: #fff;\n}\n.list .todo-con .todo-li p.completed {\n  text-decoration: line-through;\n  opacity: 0.6;\n}\n.list .todo-con .todo-li .check {\n  width: 20px;\n  height: 20px;\n  border: 1px solid hsl(233, 14%, 35%);\n  border-radius: 50%;\n  display: grid;\n  place-content: center;\n  margin-right: 1rem;\n  cursor: pointer;\n}\n.list .todo-con .todo-li .check img {\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n.list .todo-con .todo-li .check.active-check img {\n  opacity: 1;\n}\n.list .todo-con .todo-li .check.active-check {\n  background: linear-gradient(hsl(192, 100%, 67%), hsl(280, 87%, 65%));\n}\n.list .todo-con .todo-li .close {\n  background: transparent;\n  border: none;\n  outline: none;\n  opacity: 0;\n  transition: all 0.4s ease;\n  cursor: pointer;\n  color: #fff;\n}\n.list .todo-con .todo-li:hover .close {\n  opacity: 1;\n}\n\n.hr {\n  width: 100%;\n  background: hsl(233, 14%, 35%);\n  height: 0.9px;\n}\n\n.info {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  color: hsl(234, 11%, 52%);\n  padding: 1rem 0.9rem;\n  background: hsl(235, 24%, 19%);\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  cursor: pointer;\n}\n\n.choice {\n  display: flex;\n}\n\n.choice p {\n  padding: 0 5px;\n}\n\n.info p:hover {\n  color: hsl(220, 98%, 61%);\n}\n\n.active {\n  color: hsl(220, 98%, 61%);\n}`, \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":[],"sourceRoot":""}