{"version":3,"file":"app-component-stories.eb28ab24c90a03d60446.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA","sources":["webpack://@org/source/./todo/src/app/app.component.ts"],"sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./app.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./app.component.scss?ngResource\";\nimport { Component } from \"@angular/core\";\nimport { TodoServiceService } from \"../app/todo-service.service\";\nexport let AppComponent = class AppComponent {\n    ngOnInit() {\n        this.todoService.getTodos().subscribe((todos) => {\n            console.log(\"Server Response - Todos: \", todos);\n            this.allTodos = todos;\n        });\n    }\n    constructor(todoService) {\n        this.todoService = todoService;\n        this.isLoading = false;\n        this.selectedTodo = null;\n    }\n    addTodo(newTodo) {\n        this.todoService.addTodo(newTodo).subscribe((response) => {\n            console.log(\"server response\", response);\n            this.allTodos.push(response);\n            this.fetchTodos();\n        });\n    }\n    updateTodo(updatedTodo) {\n        this.todoService\n            .updateTodo(updatedTodo.id, updatedTodo)\n            .subscribe((updatedTodoFromServer) => {\n            const index = this.allTodos.findIndex((todo) => todo.id === updatedTodo.id);\n            if (index !== -1) {\n                this.allTodos[index] = updatedTodoFromServer;\n            }\n        });\n    }\n    handleTodoUpdated(updatedTodo) {\n        if (this.selectedTodo) {\n            this.updateTodo(updatedTodo);\n        }\n        else {\n            this.addTodo(updatedTodo);\n        }\n        this.selectedTodo = null; // Clear selected todo after updating or adding\n    }\n    deleteTodo(todoId) {\n        console.log(\"delete\", todoId);\n        this.todoService.deleteTodo(todoId).subscribe(() => {\n            this.allTodos = this.allTodos.filter((todo) => todo.id !== todoId);\n            this.fetchTodos();\n        });\n    }\n    fetchTodos() {\n        this.todoService.getTodos().subscribe((todos) => {\n            this.allTodos = todos;\n        });\n    }\n    markCompleted(todo) {\n        console.log(\"mark complete\", todo);\n        if (todo.id !== undefined) {\n            this.todoService.markAsComplete(todo.id, !todo.complete).subscribe(() => {\n                todo.complete = !todo.complete;\n            });\n        }\n    }\n    clearCompleted() {\n        const completedTodoIds = this.allTodos\n            .filter((todo) => todo.complete && todo.id !== undefined)\n            .map((todo) => todo.id);\n        completedTodoIds.forEach((todoId) => {\n            this.todoService.deleteTodo(todoId).subscribe(() => {\n                this.allTodos = this.allTodos.filter((todo) => {\n                    return todo.id !== todoId;\n                });\n                this.fetchTodos();\n            });\n        });\n    }\n    static { this.ctorParameters = () => [\n        { type: TodoServiceService }\n    ]; }\n};\nAppComponent = __decorate([\n    Component({\n        selector: \"org-root\",\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    }),\n    __metadata(\"design:paramtypes\", [TodoServiceService])\n], AppComponent);\n"],"names":[],"sourceRoot":""}