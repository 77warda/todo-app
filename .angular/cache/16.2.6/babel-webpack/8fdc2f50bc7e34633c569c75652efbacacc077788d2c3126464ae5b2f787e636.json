{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../environments/environment.development\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoServiceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n  }\n  getTodos() {\n    return this.http.get(this.apiUrl);\n  }\n  addTodo(todo) {\n    return this.http.post(this.apiUrl, todo);\n  }\n  deleteTodo(todoId) {\n    return this.http.delete(`${this.apiUrl}/${todoId}`);\n  }\n  markAsComplete(todoId, status) {\n    return this.http.patch(`${this.apiUrl}/${todoId}`, {\n      complete: status\n    });\n  }\n  updateTodo(id, updatedTodo) {\n    return this.http.put(`${this.apiUrl}/${id}`, updatedTodo);\n  }\n  static #_ = this.ɵfac = function TodoServiceService_Factory(t) {\n    return new (t || TodoServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoServiceService,\n    factory: TodoServiceService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["HttpClient","environment","TodoServiceService","constructor","http","apiUrl","getTodos","get","addTodo","todo","post","deleteTodo","todoId","delete","markAsComplete","status","patch","complete","updateTodo","id","updatedTodo","put","_","i0","ɵɵinject","i1","_2","factory","ɵfac","providedIn"],"sources":["/Users/macbookpro/OneSchool/todo app/todo-app/todo/src/app/todo-service.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"../environments/environment.development\";\nimport { Todo } from \"./new-todos/todo.interface\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TodoServiceService {\n  private apiUrl = environment.apiUrl;\n  constructor(private http: HttpClient) {}\n\n  getTodos(): Observable<Todo[]> {\n    return this.http.get<Todo[]>(this.apiUrl);\n  }\n\n  addTodo(todo: Todo): Observable<Todo> {\n    return this.http.post<Todo>(this.apiUrl, todo);\n  }\n\n  deleteTodo(todoId: number): Observable<Todo> {\n    return this.http.delete<Todo>(`${this.apiUrl}/${todoId}`);\n  }\n\n  markAsComplete(todoId: number, status: boolean): Observable<Todo> {\n    return this.http.patch<Todo>(`${this.apiUrl}/${todoId}`, {\n      complete: status,\n    });\n  }\n  updateTodo(id: number, updatedTodo: Todo): Observable<Todo> {\n    return this.http.put<Todo>(`${this.apiUrl}/${id}`, updatedTodo);\n  }\n}\n"],"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,WAAW,QAAQ,yCAAyC;;;AAMrE,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,MAAM,GAAGJ,WAAW,CAACI,MAAM;EACI;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC3C;EAEAG,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACL,MAAM,EAAEI,IAAI,CAAC;EAChD;EAEAE,UAAUA,CAACC,MAAc;IACvB,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACR,MAAM,IAAIO,MAAM,EAAE,CAAC;EAC3D;EAEAE,cAAcA,CAACF,MAAc,EAAEG,MAAe;IAC5C,OAAO,IAAI,CAACX,IAAI,CAACY,KAAK,CAAO,GAAG,IAAI,CAACX,MAAM,IAAIO,MAAM,EAAE,EAAE;MACvDK,QAAQ,EAAEF;KACX,CAAC;EACJ;EACAG,UAAUA,CAACC,EAAU,EAAEC,WAAiB;IACtC,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAO,GAAG,IAAI,CAAChB,MAAM,IAAIc,EAAE,EAAE,EAAEC,WAAW,CAAC;EACjE;EAAC,QAAAE,CAAA,G;qBAvBUpB,kBAAkB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAzB,UAAA;EAAA;EAAA,QAAA0B,EAAA,G;WAAlBxB,kBAAkB;IAAAyB,OAAA,EAAlBzB,kBAAkB,CAAA0B,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}