{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { Validators, FormBuilder } from \"@angular/forms\";\nimport { DataShareService } from \"../data-share.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../data-share.service\";\nexport class NewTodosComponent {\n  constructor(fb, todoEditService) {\n    this.fb = fb;\n    this.todoEditService = todoEditService;\n    this.addTodoItem = new EventEmitter();\n    this.todoForm = this.fb.group({\n      name: [\"\", Validators.required]\n    });\n    this.todos = [];\n    this.selectedTodoSubscription = this.todoEditService.selectedTodo$.subscribe(selectedTodo => {\n      this.selectedTodo = selectedTodo;\n      this.todoForm.patchValue({\n        name: selectedTodo ? selectedTodo.name : \"\"\n      });\n    });\n  }\n  ngOnInit() {\n    this.todoForm = this.fb.group({\n      name: [\"\", Validators.required]\n    });\n  }\n  // addTodo() {\n  //   if (this.todoForm.valid) {\n  //     if (this.selectedTodo) {\n  //       // Update existing todo\n  //       const index = this.todos.findIndex(\n  //         (todo) => todo.id === this.selectedTodo.id\n  //       );\n  //       if (index !== -1) {\n  //         this.todos[index] = {\n  //           ...this.selectedTodo,\n  //           name: this.todoForm.value.name,\n  //         };\n  //         console.log(\"edit\", this.todos);\n  //       }\n  //     } else {\n  //       // Add new todo\n  //       const newTodo = {\n  //         id: this.todos.length + 1, // Generate a unique ID (you can use a more robust method)\n  //         name: this.todoForm.value.name,\n  //       };\n  //       this.todos.push(newTodo);\n  //       console.log(\"add\", newTodo);\n  //     }\n  //     // Reset the form and selectedTodo\n  //     this.todoForm.reset();\n  //     this.todoEditService.clearTodo();\n  //   }\n  // }\n  addTodo() {\n    console.log(\"Selected Todo:\", this.selectedTodo);\n    console.log(\"Todos before update:\", this.todos);\n    if (this.todoForm.valid) {\n      // ... rest of the code\n      console.log(\"Todos after update:\", this.todos);\n    }\n  }\n  ngOnDestroy() {\n    this.selectedTodoSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function NewTodosComponent_Factory(t) {\n    return new (t || NewTodosComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataShareService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewTodosComponent,\n    selectors: [[\"org-new-todos\"]],\n    outputs: {\n      addTodoItem: \"addTodoItem\"\n    },\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"todo\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Create a new todo..\", \"id\", \"name\"], [\"type\", \"submit\", 1, \"pos-abs\", 3, \"disabled\"], [\"src\", \"../../assets/img/icon-check.svg\", \"alt\", \"\"]],\n    template: function NewTodosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function NewTodosComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.addTodo();\n        });\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.todoForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.todoForm.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".todo[_ngcontent-%COMP%] {\\n  width: 600px;\\n  max-height: 498px;\\n}\\n.todo[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 83px;\\n  position: relative;\\n}\\n.todo[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 95%;\\n  padding: 15px 30px;\\n  border-radius: 5px;\\n  margin-top: 2rem;\\n  background: hsl(235, 24%, 19%);\\n  font-size: 16px;\\n  color: #fff;\\n  letter-spacing: 1px;\\n  outline: none;\\n  border: none;\\n}\\n.todo[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder {\\n  color: #fff;\\n  letter-spacing: 2px;\\n}\\n.todo[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .pos-abs[_ngcontent-%COMP%] {\\n  position: absolute;\\n  right: 0px;\\n  top: 57%;\\n}\\n.todo[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n}\\n.todo[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n}\\n.todo[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  height: 15px;\\n  width: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3RvZG8vc3JjL2FwcC9uZXctdG9kb3MvbmV3LXRvZG9zLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vdG9kbyUyMGFwcC90b2RvLWFwcC90b2RvL3NyYy9hcHAvbmV3LXRvZG9zL25ldy10b2Rvcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSxpQkFBQTtBQ0NKO0FEQ0k7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FDQ1I7QURDUTtFQUNJLFVBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSw4QkFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtBQ0NaO0FEQ1k7RUFDSSxXQUFBO0VBQ0EsbUJBQUE7QUNDaEI7QURJUTtFQUNJLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFFBQUE7QUNGWjtBREtRO0VBQ0ksNkJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7QUNIWjtBREtZO0VBQ0ksWUFBQTtFQUNBLG1CQUFBO0FDSGhCO0FETVk7RUFDSSxZQUFBO0VBQ0EsV0FBQTtBQ0poQiIsInNvdXJjZXNDb250ZW50IjpbIi50b2RvIHtcbiAgICB3aWR0aDogNjAwcHg7XG4gICAgbWF4LWhlaWdodDogNDk4cHg7XG5cbiAgICBmb3JtIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogODNweDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICAgIHdpZHRoOiA5NSU7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4IDMwcHg7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAycmVtO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogaHNsKDIzNSwgMjQlLCAxOSUpO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcblxuICAgICAgICAgICAgJjo6cGxhY2Vob2xkZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICAgIC5wb3MtYWJzIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHJpZ2h0OiAwcHg7XG4gICAgICAgICAgICB0b3A6IDU3JTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNTtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCIudG9kbyB7XG4gIHdpZHRoOiA2MDBweDtcbiAgbWF4LWhlaWdodDogNDk4cHg7XG59XG4udG9kbyBmb3JtIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogODNweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLnRvZG8gZm9ybSBpbnB1dCB7XG4gIHdpZHRoOiA5NSU7XG4gIHBhZGRpbmc6IDE1cHggMzBweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICBiYWNrZ3JvdW5kOiBoc2woMjM1LCAyNCUsIDE5JSk7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi50b2RvIGZvcm0gaW5wdXQ6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG59XG4udG9kbyBmb3JtIC5wb3MtYWJzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMHB4O1xuICB0b3A6IDU3JTtcbn1cbi50b2RvIGZvcm0gYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLnRvZG8gZm9ybSBidXR0b246ZGlzYWJsZWQge1xuICBvcGFjaXR5OiAwLjU7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG59XG4udG9kbyBmb3JtIGJ1dHRvbiBpbWcge1xuICBoZWlnaHQ6IDE1cHg7XG4gIHdpZHRoOiBhdXRvO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","Validators","FormBuilder","DataShareService","NewTodosComponent","constructor","fb","todoEditService","addTodoItem","todoForm","group","name","required","todos","selectedTodoSubscription","selectedTodo$","subscribe","selectedTodo","patchValue","ngOnInit","addTodo","console","log","valid","ngOnDestroy","unsubscribe","_","i0","ɵɵdirectiveInject","i1","i2","_2","selectors","outputs","decls","vars","consts","template","NewTodosComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","NewTodosComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","invalid"],"sources":["/Users/macbookpro/OneSchool/todo app/todo-app/todo/src/app/new-todos/new-todos.component.ts","/Users/macbookpro/OneSchool/todo app/todo-app/todo/src/app/new-todos/new-todos.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormGroup, Validators, FormBuilder } from \"@angular/forms\";\nimport { TodoServiceService } from \"../todo-service.service\";\nimport { DataShareService } from \"../data-share.service\";\nimport { Subscription } from \"rxjs\";\n@Component({\n  selector: \"org-new-todos\",\n  templateUrl: \"./new-todos.component.html\",\n  styleUrls: [\"./new-todos.component.scss\"],\n})\nexport class NewTodosComponent implements OnInit {\n  @Output() addTodoItem = new EventEmitter<any>();\n  selectedTodoSubscription: Subscription;\n  selectedTodo: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private todoEditService: DataShareService\n  ) {\n    this.selectedTodoSubscription =\n      this.todoEditService.selectedTodo$.subscribe((selectedTodo) => {\n        this.selectedTodo = selectedTodo;\n        this.todoForm.patchValue({\n          name: selectedTodo ? selectedTodo.name : \"\",\n        });\n      });\n  }\n\n  todoForm: FormGroup = this.fb.group({\n    name: [\"\", Validators.required],\n  });\n  todos: any[] = [];\n\n  ngOnInit(): void {\n    this.todoForm = this.fb.group({\n      name: [\"\", Validators.required],\n    });\n  }\n\n  // addTodo() {\n  //   if (this.todoForm.valid) {\n  //     if (this.selectedTodo) {\n  //       // Update existing todo\n  //       const index = this.todos.findIndex(\n  //         (todo) => todo.id === this.selectedTodo.id\n  //       );\n  //       if (index !== -1) {\n  //         this.todos[index] = {\n  //           ...this.selectedTodo,\n  //           name: this.todoForm.value.name,\n  //         };\n  //         console.log(\"edit\", this.todos);\n  //       }\n  //     } else {\n  //       // Add new todo\n  //       const newTodo = {\n  //         id: this.todos.length + 1, // Generate a unique ID (you can use a more robust method)\n  //         name: this.todoForm.value.name,\n  //       };\n  //       this.todos.push(newTodo);\n  //       console.log(\"add\", newTodo);\n  //     }\n\n  //     // Reset the form and selectedTodo\n  //     this.todoForm.reset();\n  //     this.todoEditService.clearTodo();\n  //   }\n  // }\n  addTodo() {\n    console.log(\"Selected Todo:\", this.selectedTodo);\n    console.log(\"Todos before update:\", this.todos);\n\n    if (this.todoForm.valid) {\n      // ... rest of the code\n\n      console.log(\"Todos after update:\", this.todos);\n    }\n  }\n  ngOnDestroy() {\n    this.selectedTodoSubscription.unsubscribe();\n  }\n}\n","<div class=\"todo\">\n  <form [formGroup]=\"todoForm\" (ngSubmit)=\"addTodo()\">\n    <input\n      formControlName=\"name\"\n      type=\"text\"\n      placeholder=\"Create a new todo..\"\n      id=\"name\"\n    />\n    <button class=\"pos-abs\" type=\"submit\" [disabled]=\"todoForm.invalid\">\n      <img src=\"../../assets/img/icon-check.svg\" alt=\"\" />\n    </button>\n  </form>\n</div>\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAwB,eAAe;AACvE,SAAoBC,UAAU,EAAEC,WAAW,QAAQ,gBAAgB;AAEnE,SAASC,gBAAgB,QAAQ,uBAAuB;;;;AAOxD,OAAM,MAAOC,iBAAiB;EAK5BC,YACUC,EAAe,EACfC,eAAiC;IADjC,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAC,eAAe,GAAfA,eAAe;IANf,KAAAC,WAAW,GAAG,IAAIR,YAAY,EAAO;IAiB/C,KAAAS,QAAQ,GAAc,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAClCC,IAAI,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ;KAC/B,CAAC;IACF,KAAAC,KAAK,GAAU,EAAE;IAZf,IAAI,CAACC,wBAAwB,GAC3B,IAAI,CAACP,eAAe,CAACQ,aAAa,CAACC,SAAS,CAAEC,YAAY,IAAI;MAC5D,IAAI,CAACA,YAAY,GAAGA,YAAY;MAChC,IAAI,CAACR,QAAQ,CAACS,UAAU,CAAC;QACvBP,IAAI,EAAEM,YAAY,GAAGA,YAAY,CAACN,IAAI,GAAG;OAC1C,CAAC;IACJ,CAAC,CAAC;EACN;EAOAQ,QAAQA,CAAA;IACN,IAAI,CAACV,QAAQ,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC5BC,IAAI,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ;KAC/B,CAAC;EACJ;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACAQ,OAAOA,CAAA;IACLC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACL,YAAY,CAAC;IAChDI,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACT,KAAK,CAAC;IAE/C,IAAI,IAAI,CAACJ,QAAQ,CAACc,KAAK,EAAE;MACvB;MAEAF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACT,KAAK,CAAC;;EAElD;EACAW,WAAWA,CAAA;IACT,IAAI,CAACV,wBAAwB,CAACW,WAAW,EAAE;EAC7C;EAAC,QAAAC,CAAA,G;qBAtEUtB,iBAAiB,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAA3B,WAAA,GAAAyB,EAAA,CAAAC,iBAAA,CAAAE,EAAA,CAAA3B,gBAAA;EAAA;EAAA,QAAA4B,EAAA,G;UAAjB3B,iBAAiB;IAAA4B,SAAA;IAAAC,OAAA;MAAAzB,WAAA;IAAA;IAAA0B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV9BZ,EAAA,CAAAc,cAAA,aAAkB;QACad,EAAA,CAAAe,UAAA,sBAAAC,oDAAA;UAAA,OAAYH,GAAA,CAAApB,OAAA,EAAS;QAAA,EAAC;QACjDO,EAAA,CAAAiB,SAAA,eAKE;QACFjB,EAAA,CAAAc,cAAA,gBAAoE;QAClEd,EAAA,CAAAiB,SAAA,aAAoD;QACtDjB,EAAA,CAAAkB,YAAA,EAAS;;;QATLlB,EAAA,CAAAmB,SAAA,GAAsB;QAAtBnB,EAAA,CAAAoB,UAAA,cAAAP,GAAA,CAAA/B,QAAA,CAAsB;QAOYkB,EAAA,CAAAmB,SAAA,GAA6B;QAA7BnB,EAAA,CAAAoB,UAAA,aAAAP,GAAA,CAAA/B,QAAA,CAAAuC,OAAA,CAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}