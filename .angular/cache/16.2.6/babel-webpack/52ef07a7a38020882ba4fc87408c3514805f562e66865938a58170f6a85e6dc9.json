{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./new-todos.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./new-todos.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { Validators, FormBuilder } from \"@angular/forms\";\nimport { DataShareService } from \"../data-share.service\";\nexport let NewTodosComponent = class NewTodosComponent {\n  // selectedTodo: any;\n  constructor(fb, todoEditService) {\n    this.fb = fb;\n    this.todoEditService = todoEditService;\n    this.selectedTodo = null;\n    this.addTodoItem = new EventEmitter();\n    this.todoUpdated = new EventEmitter();\n    this.todoForm = this.fb.group({\n      name: [\"\", Validators.required]\n    });\n    this.todos = [];\n    this.selectedTodoSubscription = this.todoEditService.selectedTodo$.subscribe(selectedTodo => {\n      this.selectedTodo = selectedTodo;\n      this.todoForm.patchValue({\n        name: selectedTodo ? selectedTodo.name : \"\"\n      });\n    });\n  }\n  ngOnInit() {\n    this.todoForm = this.fb.group({\n      name: [\"\", Validators.required]\n    });\n  }\n  // addTodo() {\n  //   if (this.todoForm.valid) {\n  //     const newTodo = this.todoForm.value;\n  //     this.todoForm.reset();\n  //     this.addTodoItem.emit(newTodo);\n  //   }\n  // }\n  // addTodo() {\n  //   if (this.todoForm.valid) {\n  //     const newTodo = this.todoForm.value;\n  //     if (this.selectedTodo) {\n  //       // Edit existing todo\n  //       const index = this.todos.findIndex(\n  //         (todo) => todo.id === this.selectedTodo.id\n  //       );\n  //       if (index !== -1) {\n  //         this.todos[index] = {\n  //           ...this.selectedTodo,\n  //           name: newTodo.name, // Update the name property with the new value from the form\n  //         };\n  //       }\n  //     } else {\n  //       const newTodo = this.todoForm.value;\n  //       this.todoForm.reset();\n  //       this.addTodoItem.emit(newTodo);\n  //     }\n  //     this.todoForm.reset();\n  //     this.todoEditService.clearTodo();\n  //   }\n  // }\n  onSubmit() {\n    if (this.todoForm.valid) {\n      const newTodo = {\n        id: this.selectedTodo ? this.selectedTodo.id : this.todos.length + 1,\n        name: this.todoForm.value.name,\n        complete: this.selectedTodo ? this.selectedTodo.complete : false\n      };\n      this.todoUpdated.emit(newTodo);\n      this.todoForm.reset();\n    }\n  }\n  ngOnDestroy() {\n    this.selectedTodoSubscription.unsubscribe();\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: FormBuilder\n  }, {\n    type: DataShareService\n  }];\n  static #_2 = this.propDecorators = {\n    selectedTodo: [{\n      type: Input\n    }],\n    addTodoItem: [{\n      type: Output\n    }],\n    todoUpdated: [{\n      type: Output\n    }]\n  };\n};\nNewTodosComponent = __decorate([Component({\n  selector: \"org-new-todos\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n}), __metadata(\"design:paramtypes\", [FormBuilder, DataShareService])], NewTodosComponent);","map":{"version":3,"names":["__decorate","__metadata","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","EventEmitter","Input","Output","Validators","FormBuilder","DataShareService","NewTodosComponent","constructor","fb","todoEditService","selectedTodo","addTodoItem","todoUpdated","todoForm","group","name","required","todos","selectedTodoSubscription","selectedTodo$","subscribe","patchValue","ngOnInit","onSubmit","valid","newTodo","id","length","value","complete","emit","reset","ngOnDestroy","unsubscribe","_","ctorParameters","type","_2","propDecorators","selector","template","styles"],"sources":["/Users/macbookpro/OneSchool/todo app/todo-app/todo/src/app/new-todos/new-todos.component.ts"],"sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./new-todos.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./new-todos.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { Validators, FormBuilder } from \"@angular/forms\";\nimport { DataShareService } from \"../data-share.service\";\nexport let NewTodosComponent = class NewTodosComponent {\n    // selectedTodo: any;\n    constructor(fb, todoEditService) {\n        this.fb = fb;\n        this.todoEditService = todoEditService;\n        this.selectedTodo = null;\n        this.addTodoItem = new EventEmitter();\n        this.todoUpdated = new EventEmitter();\n        this.todoForm = this.fb.group({\n            name: [\"\", Validators.required],\n        });\n        this.todos = [];\n        this.selectedTodoSubscription =\n            this.todoEditService.selectedTodo$.subscribe((selectedTodo) => {\n                this.selectedTodo = selectedTodo;\n                this.todoForm.patchValue({\n                    name: selectedTodo ? selectedTodo.name : \"\",\n                });\n            });\n    }\n    ngOnInit() {\n        this.todoForm = this.fb.group({\n            name: [\"\", Validators.required],\n        });\n    }\n    // addTodo() {\n    //   if (this.todoForm.valid) {\n    //     const newTodo = this.todoForm.value;\n    //     this.todoForm.reset();\n    //     this.addTodoItem.emit(newTodo);\n    //   }\n    // }\n    // addTodo() {\n    //   if (this.todoForm.valid) {\n    //     const newTodo = this.todoForm.value;\n    //     if (this.selectedTodo) {\n    //       // Edit existing todo\n    //       const index = this.todos.findIndex(\n    //         (todo) => todo.id === this.selectedTodo.id\n    //       );\n    //       if (index !== -1) {\n    //         this.todos[index] = {\n    //           ...this.selectedTodo,\n    //           name: newTodo.name, // Update the name property with the new value from the form\n    //         };\n    //       }\n    //     } else {\n    //       const newTodo = this.todoForm.value;\n    //       this.todoForm.reset();\n    //       this.addTodoItem.emit(newTodo);\n    //     }\n    //     this.todoForm.reset();\n    //     this.todoEditService.clearTodo();\n    //   }\n    // }\n    onSubmit() {\n        if (this.todoForm.valid) {\n            const newTodo = {\n                id: this.selectedTodo ? this.selectedTodo.id : this.todos.length + 1,\n                name: this.todoForm.value.name,\n                complete: this.selectedTodo ? this.selectedTodo.complete : false,\n            };\n            this.todoUpdated.emit(newTodo);\n            this.todoForm.reset();\n        }\n    }\n    ngOnDestroy() {\n        this.selectedTodoSubscription.unsubscribe();\n    }\n    static { this.ctorParameters = () => [\n        { type: FormBuilder },\n        { type: DataShareService }\n    ]; }\n    static { this.propDecorators = {\n        selectedTodo: [{ type: Input }],\n        addTodoItem: [{ type: Output }],\n        todoUpdated: [{ type: Output }]\n    }; }\n};\nNewTodosComponent = __decorate([\n    Component({\n        selector: \"org-new-todos\",\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    }),\n    __metadata(\"design:paramtypes\", [FormBuilder,\n        DataShareService])\n], NewTodosComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}