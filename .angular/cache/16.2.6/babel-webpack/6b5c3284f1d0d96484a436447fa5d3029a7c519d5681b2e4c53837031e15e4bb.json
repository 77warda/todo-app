{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../environments/environment.development\";\nexport let TodoServiceService = class TodoServiceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n  }\n  getTodos() {\n    return this.http.get(this.apiUrl);\n  }\n  addTodo(todo) {\n    return this.http.post(this.apiUrl, todo);\n  }\n  deleteTodo(todoId) {\n    return this.http.delete(`${this.apiUrl}/${todoId}`);\n  }\n  markAsComplete(todoId, status) {\n    return this.http.patch(`${this.apiUrl}/${todoId}`, {\n      complete: status\n    });\n  }\n  updateTodo(id, updatedTodo) {\n    return this.http.patch(`${this.apiUrl}/${id}`, updatedTodo);\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nTodoServiceService = __decorate([Injectable({\n  providedIn: \"root\"\n}), __metadata(\"design:paramtypes\", [HttpClient])], TodoServiceService);","map":{"version":3,"names":["__decorate","__metadata","Injectable","HttpClient","environment","TodoServiceService","constructor","http","apiUrl","getTodos","get","addTodo","todo","post","deleteTodo","todoId","delete","markAsComplete","status","patch","complete","updateTodo","id","updatedTodo","_","ctorParameters","type","providedIn"],"sources":["/Users/macbookpro/OneSchool/todo app/todo-app/todo/src/app/todo-service.service.ts"],"sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../environments/environment.development\";\nexport let TodoServiceService = class TodoServiceService {\n    constructor(http) {\n        this.http = http;\n        this.apiUrl = environment.apiUrl;\n    }\n    getTodos() {\n        return this.http.get(this.apiUrl);\n    }\n    addTodo(todo) {\n        return this.http.post(this.apiUrl, todo);\n    }\n    deleteTodo(todoId) {\n        return this.http.delete(`${this.apiUrl}/${todoId}`);\n    }\n    markAsComplete(todoId, status) {\n        return this.http.patch(`${this.apiUrl}/${todoId}`, {\n            complete: status,\n        });\n    }\n    updateTodo(id, updatedTodo) {\n        return this.http.patch(`${this.apiUrl}/${id}`, updatedTodo);\n    }\n    static { this.ctorParameters = () => [\n        { type: HttpClient }\n    ]; }\n};\nTodoServiceService = __decorate([\n    Injectable({\n        providedIn: \"root\",\n    }),\n    __metadata(\"design:paramtypes\", [HttpClient])\n], TodoServiceService);\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAC9C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,WAAW,QAAQ,yCAAyC;AACrE,OAAO,IAAIC,kBAAkB,GAAG,MAAMA,kBAAkB,CAAC;EACrDC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,MAAM,GAAGJ,WAAW,CAACI,MAAM;EACpC;EACAC,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,CAAC;EACrC;EACAG,OAAOA,CAACC,IAAI,EAAE;IACV,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,MAAM,EAAEI,IAAI,CAAC;EAC5C;EACAE,UAAUA,CAACC,MAAM,EAAE;IACf,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAE,GAAE,IAAI,CAACR,MAAO,IAAGO,MAAO,EAAC,CAAC;EACvD;EACAE,cAAcA,CAACF,MAAM,EAAEG,MAAM,EAAE;IAC3B,OAAO,IAAI,CAACX,IAAI,CAACY,KAAK,CAAE,GAAE,IAAI,CAACX,MAAO,IAAGO,MAAO,EAAC,EAAE;MAC/CK,QAAQ,EAAEF;IACd,CAAC,CAAC;EACN;EACAG,UAAUA,CAACC,EAAE,EAAEC,WAAW,EAAE;IACxB,OAAO,IAAI,CAAChB,IAAI,CAACY,KAAK,CAAE,GAAE,IAAI,CAACX,MAAO,IAAGc,EAAG,EAAC,EAAEC,WAAW,CAAC;EAC/D;EAAC,QAAAC,CAAA,GACQ,IAAI,CAACC,cAAc,GAAG,MAAM,CACjC;IAAEC,IAAI,EAAEvB;EAAW,CAAC,CACvB;AACL,CAAC;AACDE,kBAAkB,GAAGL,UAAU,CAAC,CAC5BE,UAAU,CAAC;EACPyB,UAAU,EAAE;AAChB,CAAC,CAAC,EACF1B,UAAU,CAAC,mBAAmB,EAAE,CAACE,UAAU,CAAC,CAAC,CAChD,EAAEE,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}