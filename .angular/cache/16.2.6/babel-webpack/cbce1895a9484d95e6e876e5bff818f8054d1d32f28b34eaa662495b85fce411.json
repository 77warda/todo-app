{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./new-todos.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./new-todos.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { Validators, FormBuilder } from \"@angular/forms\";\nimport { DataShareService } from \"../data-share.service\";\nexport let NewTodosComponent = class NewTodosComponent {\n  // selectedTodo: any;\n  constructor(fb, todoEditService) {\n    this.fb = fb;\n    this.todoEditService = todoEditService;\n    this.selectedTodo = null;\n    this.addTodoItem = new EventEmitter();\n    this.todoForm = this.fb.group({\n      name: [\"\", Validators.required]\n    });\n    this.todos = [];\n    this.selectedTodoSubscription = this.todoEditService.selectedTodo$.subscribe(selectedTodo => {\n      this.selectedTodo = selectedTodo;\n      this.todoForm.patchValue({\n        name: selectedTodo ? selectedTodo.name : \"\"\n      });\n    });\n  }\n  ngOnInit() {\n    this.todoForm = this.fb.group({\n      name: [\"\", Validators.required]\n    });\n  }\n  // addTodo() {\n  //   if (this.todoForm.valid) {\n  //     const newTodo = this.todoForm.value;\n  //     this.todoForm.reset();\n  //     this.addTodoItem.emit(newTodo);\n  //   }\n  // }\n  addTodo() {\n    if (this.todoForm.valid) {\n      const newTodo = this.todoForm.value;\n      if (this.selectedTodo) {\n        // Edit existing todo\n        const index = this.todos.findIndex(todo => todo.id === this.selectedTodo.id);\n        if (index !== -1) {\n          this.todos[index] = {\n            ...this.selectedTodo,\n            name: newTodo.name // Update the name property with the new value from the form\n          };\n        }\n      } else {\n        const newTodo = this.todoForm.value;\n        this.todoForm.reset();\n        this.addTodoItem.emit(newTodo);\n      }\n      this.todoForm.reset();\n      this.todoEditService.clearTodo();\n    }\n  }\n  ngOnDestroy() {\n    this.selectedTodoSubscription.unsubscribe();\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: FormBuilder\n  }, {\n    type: DataShareService\n  }];\n  static #_2 = this.propDecorators = {\n    selectedTodo: [{\n      type: Input\n    }],\n    addTodoItem: [{\n      type: Output\n    }]\n  };\n};\nNewTodosComponent = __decorate([Component({\n  selector: \"org-new-todos\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n}), __metadata(\"design:paramtypes\", [FormBuilder, DataShareService])], NewTodosComponent);","map":{"version":3,"names":["__decorate","__metadata","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","EventEmitter","Input","Output","Validators","FormBuilder","DataShareService","NewTodosComponent","constructor","fb","todoEditService","selectedTodo","addTodoItem","todoForm","group","name","required","todos","selectedTodoSubscription","selectedTodo$","subscribe","patchValue","ngOnInit","addTodo","valid","newTodo","value","index","findIndex","todo","id","reset","emit","clearTodo","ngOnDestroy","unsubscribe","_","ctorParameters","type","_2","propDecorators","selector","template","styles"],"sources":["/Users/macbookpro/OneSchool/todo app/todo-app/todo/src/app/new-todos/new-todos.component.ts"],"sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./new-todos.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./new-todos.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { Validators, FormBuilder } from \"@angular/forms\";\nimport { DataShareService } from \"../data-share.service\";\nexport let NewTodosComponent = class NewTodosComponent {\n    // selectedTodo: any;\n    constructor(fb, todoEditService) {\n        this.fb = fb;\n        this.todoEditService = todoEditService;\n        this.selectedTodo = null;\n        this.addTodoItem = new EventEmitter();\n        this.todoForm = this.fb.group({\n            name: [\"\", Validators.required],\n        });\n        this.todos = [];\n        this.selectedTodoSubscription =\n            this.todoEditService.selectedTodo$.subscribe((selectedTodo) => {\n                this.selectedTodo = selectedTodo;\n                this.todoForm.patchValue({\n                    name: selectedTodo ? selectedTodo.name : \"\",\n                });\n            });\n    }\n    ngOnInit() {\n        this.todoForm = this.fb.group({\n            name: [\"\", Validators.required],\n        });\n    }\n    // addTodo() {\n    //   if (this.todoForm.valid) {\n    //     const newTodo = this.todoForm.value;\n    //     this.todoForm.reset();\n    //     this.addTodoItem.emit(newTodo);\n    //   }\n    // }\n    addTodo() {\n        if (this.todoForm.valid) {\n            const newTodo = this.todoForm.value;\n            if (this.selectedTodo) {\n                // Edit existing todo\n                const index = this.todos.findIndex((todo) => todo.id === this.selectedTodo.id);\n                if (index !== -1) {\n                    this.todos[index] = {\n                        ...this.selectedTodo,\n                        name: newTodo.name, // Update the name property with the new value from the form\n                    };\n                }\n            }\n            else {\n                const newTodo = this.todoForm.value;\n                this.todoForm.reset();\n                this.addTodoItem.emit(newTodo);\n            }\n            this.todoForm.reset();\n            this.todoEditService.clearTodo();\n        }\n    }\n    ngOnDestroy() {\n        this.selectedTodoSubscription.unsubscribe();\n    }\n    static { this.ctorParameters = () => [\n        { type: FormBuilder },\n        { type: DataShareService }\n    ]; }\n    static { this.propDecorators = {\n        selectedTodo: [{ type: Input }],\n        addTodoItem: [{ type: Output }]\n    }; }\n};\nNewTodosComponent = __decorate([\n    Component({\n        selector: \"org-new-todos\",\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    }),\n    __metadata(\"design:paramtypes\", [FormBuilder,\n        DataShareService])\n], NewTodosComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}