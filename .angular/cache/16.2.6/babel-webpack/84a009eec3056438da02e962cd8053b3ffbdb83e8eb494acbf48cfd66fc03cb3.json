{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class DataShareService {\n  constructor() {\n    this.selectedTodo = new BehaviorSubject(null);\n    this.selectedTodo$ = this.selectedTodo.asObservable();\n  }\n  setTodo(todo) {\n    this.selectedTodo.next(todo);\n  }\n  clearTodo() {\n    this.selectedTodo.next(null);\n  }\n  static #_ = this.ɵfac = function DataShareService_Factory(t) {\n    return new (t || DataShareService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataShareService,\n    factory: DataShareService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["BehaviorSubject","DataShareService","constructor","selectedTodo","selectedTodo$","asObservable","setTodo","todo","next","clearTodo","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/macbookpro/OneSchool/todo app/todo-app/todo/src/app/data-share.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { Todo } from \"./new-todos/todo.interface\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DataShareService {\n  constructor() {}\n  private selectedTodo = new BehaviorSubject<Todo | null>(null);\n  selectedTodo$ = this.selectedTodo.asObservable();\n\n  setTodo(todo: any) {\n    this.selectedTodo.next(todo);\n  }\n\n  clearTodo() {\n    this.selectedTodo.next(null);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,gBAAgB;EAC3BC,YAAA;IACQ,KAAAC,YAAY,GAAG,IAAIH,eAAe,CAAc,IAAI,CAAC;IAC7D,KAAAI,aAAa,GAAG,IAAI,CAACD,YAAY,CAACE,YAAY,EAAE;EAFjC;EAIfC,OAAOA,CAACC,IAAS;IACf,IAAI,CAACJ,YAAY,CAACK,IAAI,CAACD,IAAI,CAAC;EAC9B;EAEAE,SAASA,CAAA;IACP,IAAI,CAACN,YAAY,CAACK,IAAI,CAAC,IAAI,CAAC;EAC9B;EAAC,QAAAE,CAAA,G;qBAXUT,gBAAgB;EAAA;EAAA,QAAAU,EAAA,G;WAAhBV,gBAAgB;IAAAW,OAAA,EAAhBX,gBAAgB,CAAAY,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}