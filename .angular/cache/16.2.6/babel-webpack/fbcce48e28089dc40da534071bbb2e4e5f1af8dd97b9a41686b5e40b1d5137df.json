{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./todo-list.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./todo-list.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { DataShareService } from \"../data-share.service\";\nexport let TodoListComponent = class TodoListComponent {\n  constructor(todoDataService) {\n    this.todoDataService = todoDataService;\n    this.todos = [];\n    this.deleteTodoItem = new EventEmitter();\n    this.editTodoItem = new EventEmitter();\n    this.markAsComplete = new EventEmitter();\n    this.clearcompletedItems = new EventEmitter();\n    this.isLoading = false;\n    this.filter = \"all\";\n  }\n  editTodo(todo) {\n    this.todoDataService.setTodo(todo);\n  }\n  ngOnInit() {\n    this.fetchTodos();\n  }\n  fetchTodos() {\n    // this.todoService.getTodos().subscribe((response) => {\n    //   this.todos = response.map((todo) => ({ ...todo, isLoading: true }));\n    //   this.isLoading = true;\n    //   setTimeout(() => {\n    //     this.todos.forEach((todo) => (todo.isLoading = false));\n    //     this.isLoading = false; // Set isLoading to false once data is loaded\n    //   }, 2000);\n    // });\n  }\n  deleteTodo(todoId) {\n    console.log(\"child\", todoId);\n    this.deleteTodoItem.emit(todoId);\n  }\n  markCompleted(todo) {\n    this.markAsComplete.emit(todo);\n  }\n  clearCompleted() {\n    this.clearcompletedItems.emit();\n  }\n  getFilteredTodos() {\n    if (this.filter === \"active\") {\n      return this.todos.filter(todo => !todo.complete);\n    } else if (this.filter === \"completed\") {\n      return this.todos.filter(todo => todo.complete);\n    } else {\n      return this.todos;\n    }\n  }\n  setFilter(filter) {\n    this.filter = filter;\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: DataShareService\n  }];\n  static #_2 = this.propDecorators = {\n    todos: [{\n      type: Input\n    }],\n    deleteTodoItem: [{\n      type: Output\n    }],\n    editTodoItem: [{\n      type: Output\n    }],\n    markAsComplete: [{\n      type: Output\n    }],\n    clearcompletedItems: [{\n      type: Output\n    }]\n  };\n};\nTodoListComponent = __decorate([Component({\n  selector: \"org-todo-list\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n}), __metadata(\"design:paramtypes\", [DataShareService])], TodoListComponent);","map":{"version":3,"names":["__decorate","__metadata","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","EventEmitter","Input","Output","DataShareService","TodoListComponent","constructor","todoDataService","todos","deleteTodoItem","editTodoItem","markAsComplete","clearcompletedItems","isLoading","filter","editTodo","todo","setTodo","ngOnInit","fetchTodos","deleteTodo","todoId","console","log","emit","markCompleted","clearCompleted","getFilteredTodos","complete","setFilter","_","ctorParameters","type","_2","propDecorators","selector","template","styles"],"sources":["/Users/macbookpro/OneSchool/todo app/todo-app/todo/src/app/todo-list/todo-list.component.ts"],"sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./todo-list.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./todo-list.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { DataShareService } from \"../data-share.service\";\nexport let TodoListComponent = class TodoListComponent {\n    constructor(todoDataService) {\n        this.todoDataService = todoDataService;\n        this.todos = [];\n        this.deleteTodoItem = new EventEmitter();\n        this.editTodoItem = new EventEmitter();\n        this.markAsComplete = new EventEmitter();\n        this.clearcompletedItems = new EventEmitter();\n        this.isLoading = false;\n        this.filter = \"all\";\n    }\n    editTodo(todo) {\n        this.todoDataService.setTodo(todo);\n    }\n    ngOnInit() {\n        this.fetchTodos();\n    }\n    fetchTodos() {\n        // this.todoService.getTodos().subscribe((response) => {\n        //   this.todos = response.map((todo) => ({ ...todo, isLoading: true }));\n        //   this.isLoading = true;\n        //   setTimeout(() => {\n        //     this.todos.forEach((todo) => (todo.isLoading = false));\n        //     this.isLoading = false; // Set isLoading to false once data is loaded\n        //   }, 2000);\n        // });\n    }\n    deleteTodo(todoId) {\n        console.log(\"child\", todoId);\n        this.deleteTodoItem.emit(todoId);\n    }\n    markCompleted(todo) {\n        this.markAsComplete.emit(todo);\n    }\n    clearCompleted() {\n        this.clearcompletedItems.emit();\n    }\n    getFilteredTodos() {\n        if (this.filter === \"active\") {\n            return this.todos.filter((todo) => !todo.complete);\n        }\n        else if (this.filter === \"completed\") {\n            return this.todos.filter((todo) => todo.complete);\n        }\n        else {\n            return this.todos;\n        }\n    }\n    setFilter(filter) {\n        this.filter = filter;\n    }\n    static { this.ctorParameters = () => [\n        { type: DataShareService }\n    ]; }\n    static { this.propDecorators = {\n        todos: [{ type: Input }],\n        deleteTodoItem: [{ type: Output }],\n        editTodoItem: [{ type: Output }],\n        markAsComplete: [{ type: Output }],\n        clearcompletedItems: [{ type: Output }]\n    }; }\n};\nTodoListComponent = __decorate([\n    Component({\n        selector: \"org-todo-list\",\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    }),\n    __metadata(\"design:paramtypes\", [DataShareService])\n], TodoListComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}